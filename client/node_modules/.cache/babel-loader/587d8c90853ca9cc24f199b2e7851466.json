{"ast":null,"code":"import axios from \"axios\";\nexport const loginAuth = body => async dispatch => {\n  try {\n    let login = await axios.post(\"/login\", body);\n    return dispatch({\n      type: \"POST_LOGIN\",\n      payload: login\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const registerAuth = body => async dispatch => {\n  try {\n    let registro = await axios.post(\"/register\", body);\n    return dispatch({\n      type: \"POST_REGISTRO\",\n      payload: registro\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getEventDetail = id => async dispatch => {\n  try {\n    let eventsDB = await axios.get(`/eventsDB/${id}`);\n    console.log(eventsDB);\n    return dispatch({\n      type: \"GET_EVENT_DETAIL\",\n      payload: eventsDB.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllEvents = () => async dispatch => {\n  function concat(array) {\n    let newArray = [];\n\n    for (let i = 0; i < array.length; i++) {\n      newArray = newArray.concat(array[i]);\n    }\n\n    let uniqueCategories = [...new Set(newArray)];\n    return uniqueCategories;\n  }\n\n  try {\n    let getAllEvents = await axios.get(\"/events\");\n    let datos = getAllEvents.data;\n    let categories = datos.map(el => el.category);\n    let uniqueCAtegories = concat(categories);\n    let artist = datos.map(el => el.artist);\n    let uniqueArtist = concat(artist);\n    let place = datos.map(el => el.place);\n    let uniquePlace = concat(place);\n    let newObj = {\n      datos,\n      uniqueCAtegories,\n      uniqueArtist,\n      uniquePlace\n    };\n    return dispatch({\n      type: \"GET_ALL_EVENTS\",\n      payload: newObj\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createEvent = body => async dispatch => {\n  try {\n    const data = await axios.post(\"/createEvent\", body);\n    return dispatch({\n      type: \"POST_EVENT\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport function searchLive(payload) {\n  return {\n    type: \"SEARCH_LIVE\",\n    payload\n  };\n}","map":{"version":3,"names":["axios","loginAuth","body","dispatch","login","post","type","payload","error","console","log","registerAuth","registro","getEventDetail","id","eventsDB","get","data","getAllEvents","concat","array","newArray","i","length","uniqueCategories","Set","datos","categories","map","el","category","uniqueCAtegories","artist","uniqueArtist","place","uniquePlace","newObj","createEvent","searchLive"],"sources":["/Users/luisdanielrios/Desktop/ecommerce/src/store/actions.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const loginAuth = (body) => async (dispatch) => {\n  try {\n    let login = await axios.post(\"/login\", body);\n    return dispatch({\n      type: \"POST_LOGIN\",\n      payload: login,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const registerAuth = (body) => async (dispatch) => {\n  try {\n    let registro = await axios.post(\"/register\", body);\n    return dispatch({\n      type: \"POST_REGISTRO\",\n      payload: registro,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getEventDetail = (id) => async (dispatch) => {\n  try {\n    let eventsDB = await axios.get(`/eventsDB/${id}`);\n    console.log(eventsDB);\n    return dispatch({\n      type: \"GET_EVENT_DETAIL\",\n      payload: eventsDB.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllEvents = () => async (dispatch) => {\n  function concat(array) {\n    let newArray = [];\n    for (let i = 0; i < array.length; i++) {\n      newArray = newArray.concat(array[i]);\n    }\n    let uniqueCategories = [...new Set(newArray)];\n    return uniqueCategories;\n  }\n\n  try {\n    let getAllEvents = await axios.get(\"/events\");\n    let datos = getAllEvents.data;\n\n    let categories = datos.map((el) => el.category);\n    let uniqueCAtegories = concat(categories);\n\n    let artist = datos.map((el) => el.artist);\n    let uniqueArtist = concat(artist);\n\n    let place = datos.map((el) => el.place);\n    let uniquePlace = concat(place);\n\n    let newObj = {\n      datos,\n      uniqueCAtegories,\n      uniqueArtist,\n      uniquePlace,\n    };\n    return dispatch({\n      type: \"GET_ALL_EVENTS\",\n      payload: newObj,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createEvent = (body) => async (dispatch) => {\n  try {\n    const data = await axios.post(\"/createEvent\", body);\n    return dispatch({\n      type: \"POST_EVENT\",\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport function searchLive(payload) {\n  return {\n    type: \"SEARCH_LIVE\",\n    payload,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}